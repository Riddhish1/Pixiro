
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  clerkId: 'clerkId',
  email: 'email',
  profileImage: 'profileImage',
  stripeConnectId: 'stripeConnectId',
  lastLoginAt: 'lastLoginAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  subscription: 'subscription',
  stripeCustomerId: 'stripeCustomerId'
};

exports.Prisma.WebinarScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  startTime: 'startTime',
  endTime: 'endTime',
  duration: 'duration',
  webinarStatus: 'webinarStatus',
  presenterId: 'presenterId',
  tags: 'tags',
  ctaLabel: 'ctaLabel',
  ctaType: 'ctaType',
  ctaUrl: 'ctaUrl',
  couponCode: 'couponCode',
  couponEnabled: 'couponEnabled',
  couponExpiry: 'couponExpiry',
  lockChat: 'lockChat',
  stripeProductId: 'stripeProductId',
  aiAgentId: 'aiAgentId',
  priceId: 'priceId',
  recordingUrl: 'recordingUrl',
  thumbnail: 'thumbnail',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  attendeeId: 'attendeeId'
};

exports.Prisma.AttendeeScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  callStatus: 'callStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  webinarId: 'webinarId',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt',
  attendedType: 'attendedType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  attendeeId: 'attendeeId',
  userId: 'userId'
};

exports.Prisma.AiAgentsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  firstMessage: 'firstMessage',
  prompt: 'prompt',
  model: 'model',
  provider: 'provider',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.AttendedTypeEnum = exports.$Enums.AttendedTypeEnum = {
  REGISTERED: 'REGISTERED',
  ATTENDED: 'ATTENDED',
  ADDED_TO_CART: 'ADDED_TO_CART',
  FOLLOW_UP: 'FOLLOW_UP',
  BREAKOUT_ROOM: 'BREAKOUT_ROOM',
  CONVERTED: 'CONVERTED'
};

exports.CtaTypeEnum = exports.$Enums.CtaTypeEnum = {
  BUY_NOW: 'BUY_NOW',
  BOOK_A_CALL: 'BOOK_A_CALL'
};

exports.WebinarStatusEnum = exports.$Enums.WebinarStatusEnum = {
  SCHEDULED: 'SCHEDULED',
  WAITING_ROOM: 'WAITING_ROOM',
  LIVE: 'LIVE',
  ENDED: 'ENDED',
  CANCELLED: 'CANCELLED'
};

exports.CallStatusEnum = exports.$Enums.CallStatusEnum = {
  PENDING: 'PENDING',
  InProgress: 'InProgress',
  COMPLETED: 'COMPLETED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Webinar: 'Webinar',
  Attendee: 'Attendee',
  Attendance: 'Attendance',
  AiAgents: 'AiAgents'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\bonde\\Desktop\\hack\\Pixro\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\bonde\\Desktop\\hack\\Pixro\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id               String     @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name             String     @db.VarChar(100)\n  clerkId          String     @unique\n  email            String     @unique\n  profileImage     String\n  stripeConnectId  String?    @db.VarChar(255)\n  lastLoginAt      DateTime?\n  createdAt        DateTime   @default(now())\n  updatedAt        DateTime   @updatedAt\n  deletedAt        DateTime?\n  subscription     Boolean    @default(false)\n  stripeCustomerId String?    @db.VarChar(255)\n  webinars         Webinar[]  @relation(\"PresenterWebinars\")\n  aiAgents         AiAgents[] @relation(\"AiAgentsToUser\")\n\n  @@index([email])\n  @@index([clerkId])\n}\n\nmodel Webinar {\n  id              String            @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  title           String            @db.VarChar(255)\n  description     String?\n  startTime       DateTime\n  endTime         DateTime?\n  duration        Int               @default(0)\n  webinarStatus   WebinarStatusEnum @default(SCHEDULED)\n  presenterId     String            @db.Uuid\n  tags            String[]\n  ctaLabel        String?           @db.VarChar(50)\n  ctaType         CtaTypeEnum\n  ctaUrl          String?           @db.VarChar(255)\n  couponCode      String?           @db.VarChar(50)\n  couponEnabled   Boolean           @default(false)\n  couponExpiry    DateTime?\n  lockChat        Boolean           @default(false)\n  stripeProductId String?           @db.VarChar(255)\n  aiAgentId       String?           @db.Uuid\n  priceId         String?           @db.VarChar(255)\n  recordingUrl    String?\n  thumbnail       String?\n  createdAt       DateTime          @default(now())\n  updatedAt       DateTime          @updatedAt\n  deletedAt       DateTime?\n  attendeeId      String?           @db.Uuid\n  attendances     Attendance[]\n  Attendee        Attendee?         @relation(fields: [attendeeId], references: [id])\n  presenter       User              @relation(\"PresenterWebinars\", fields: [presenterId], references: [id], onDelete: Cascade)\n\n  @@index([presenterId])\n  @@index([aiAgentId])\n  @@index([startTime])\n}\n\nmodel Attendee {\n  id         String         @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  email      String         @unique\n  name       String         @db.VarChar(100)\n  callStatus CallStatusEnum @default(PENDING)\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n  Attendance Attendance[]\n  Webinar    Webinar[]\n}\n\nmodel Attendance {\n  id           String           @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  webinarId    String           @db.Uuid\n  joinedAt     DateTime         @default(now())\n  leftAt       DateTime?\n  attendedType AttendedTypeEnum\n  createdAt    DateTime         @default(now())\n  updatedAt    DateTime         @updatedAt\n  attendeeId   String           @db.Uuid\n  userId       String?          @db.Uuid\n  user         Attendee         @relation(fields: [attendeeId], references: [id])\n  webinar      Webinar          @relation(fields: [webinarId], references: [id], onDelete: Cascade)\n\n  @@unique([attendeeId, webinarId])\n  @@index([webinarId])\n  @@index([attendedType])\n}\n\nmodel AiAgents {\n  id           String   @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name         String   @db.VarChar(100)\n  firstMessage String\n  prompt       String\n  model        String   @db.VarChar(50)\n  provider     String   @db.VarChar(50)\n  userId       String   @db.Uuid\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  User         User[]   @relation(\"AiAgentsToUser\")\n}\n\nenum AttendedTypeEnum {\n  REGISTERED\n  ATTENDED\n  ADDED_TO_CART\n  FOLLOW_UP\n  BREAKOUT_ROOM\n  CONVERTED\n}\n\nenum CtaTypeEnum {\n  BUY_NOW\n  BOOK_A_CALL\n}\n\nenum WebinarStatusEnum {\n  SCHEDULED\n  WAITING_ROOM\n  LIVE\n  ENDED\n  CANCELLED\n}\n\nenum CallStatusEnum {\n  PENDING\n  InProgress\n  COMPLETED\n}\n",
  "inlineSchemaHash": "891bb0ada61ef54a1c9b108c364250620f2da1ed5729dc7223f100e983685a10",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clerkId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeConnectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webinars\",\"kind\":\"object\",\"type\":\"Webinar\",\"relationName\":\"PresenterWebinars\"},{\"name\":\"aiAgents\",\"kind\":\"object\",\"type\":\"AiAgents\",\"relationName\":\"AiAgentsToUser\"}],\"dbName\":null},\"Webinar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"webinarStatus\",\"kind\":\"enum\",\"type\":\"WebinarStatusEnum\"},{\"name\":\"presenterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ctaLabel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ctaType\",\"kind\":\"enum\",\"type\":\"CtaTypeEnum\"},{\"name\":\"ctaUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"couponCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"couponEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"couponExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lockChat\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stripeProductId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiAgentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordingUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attendeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attendances\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToWebinar\"},{\"name\":\"Attendee\",\"kind\":\"object\",\"type\":\"Attendee\",\"relationName\":\"AttendeeToWebinar\"},{\"name\":\"presenter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PresenterWebinars\"}],\"dbName\":null},\"Attendee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"callStatus\",\"kind\":\"enum\",\"type\":\"CallStatusEnum\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Attendance\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToAttendee\"},{\"name\":\"Webinar\",\"kind\":\"object\",\"type\":\"Webinar\",\"relationName\":\"AttendeeToWebinar\"}],\"dbName\":null},\"Attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webinarId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attendedType\",\"kind\":\"enum\",\"type\":\"AttendedTypeEnum\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attendeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Attendee\",\"relationName\":\"AttendanceToAttendee\"},{\"name\":\"webinar\",\"kind\":\"object\",\"type\":\"Webinar\",\"relationName\":\"AttendanceToWebinar\"}],\"dbName\":null},\"AiAgents\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AiAgentsToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

